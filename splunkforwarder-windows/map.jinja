# Get the ProgramFilesDir value from the registry
{% set programfiles = salt['reg.read_value']('HKEY_LOCAL_MACHINE', 'SOFTWARE\Microsoft\Windows\CurrentVersion', 'ProgramFilesDir').vdata %}

# Initialize a map of default values
{% load_yaml as defaults %}
package: 'splunkforwarder'
service: 'SplunkForwarder'
deploymentclient:
  conf: >-
    '{{ programfiles }}\SplunkUniversalForwarder\etc\system\local\deploymentclient.conf'
  source: ''
  source_hash: ''
log_local:
  conf: >-
    '{{ programfiles }}\SplunkUniversalForwarder\etc\log-local.cfg'
  source: ''
  source_hash: ''
{% endload %}

# Define the splunkforwarder map, merging pillar and default values
{% set splunkforwarder = salt['pillar.get'](
    'splunkforwarder:lookup',
    default=defaults,
    merge=True) %}

# Update splunkforwarder.deploymentclient map with mandatory pillar settings
{% do splunkforwarder.deploymentclient.update({
    'conf' : defaults.deploymentclient.conf,
    'source' : pillar['splunkforwarder']['lookup']['deploymentclient']['source'],
    'source_hash' : pillar['splunkforwarder']['lookup']['deploymentclient']['source_hash'],
}) %}

# Update splunkforwarder.log_local map with mandatory pillar settings
{% do splunkforwarder.log_local.update({
    'conf' : defaults.log_local.conf,
    'source' : pillar['splunkforwarder']['lookup']['log_local']['source'],
    'source_hash' : pillar['splunkforwarder']['lookup']['log_local']['source_hash'],
}) %}
